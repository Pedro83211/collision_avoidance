<launch>
  <arg name="enableRviz" default="true"/>
  <arg name="auv" default="true"/>
  <arg name="cola2_architecture" default="true"/>
  <!-- COLA2 architecture -->
  <group if="$(arg cola2_architecture)">
    <!-- Static transform -->
    <node name="world2ned" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 3.1415 world world_ned 100"/>

    <!-- Include AUVs -->
    <include file="$(find cola2_sparus2)/launch/sim_start.launch">
      <arg name="robot_name" value="sparus_1"/>
      <arg name="enable_keyboard" value="true"/>
    </include>
    <include file="$(find cola2_sparus2)/launch/sim_start.launch">
      <arg name="robot_name" value="sparus_2"/>
      <arg name="enable_keyboard" value="true"/>
    </include>
  </group>

  <!-- Multi-robot system -->
  <group if="$(arg auv)">
    <group ns="/auv">
      <!-- Load configuration files -->
      <rosparam command="load" file="$(find collision_avoidance)/config/collision_avoidance.yaml"/>
      <rosparam command="load" file="$(find collision_avoidance)/config/data_extraction.yaml"/>

      <!-- Dynamically add AUV nodes -->
      <node name="AUV_sparus_1" pkg="collision_avoidance" type="AUV_robot.py" output="screen" respawn="true">
        <param name="robot_ID" value="0"/>
        <param name="robot_name" value="sparus_1"/>
        <param name="navigation_depth" value="5"/>
      </node>
      <node name="AUV_sparus_2" pkg="collision_avoidance" type="AUV_robot.py" output="screen" respawn="true">
        <param name="robot_ID" value="1"/>
        <param name="robot_name" value="sparus_2"/>
        <param name="navigation_depth" value="5"/>
      </node>
    </group>
  </group>
  <!-- RViz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find collision_avoidance)/scene/sparus2.rviz"/>
</launch>
